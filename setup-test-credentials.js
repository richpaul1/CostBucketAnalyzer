#!/usr/bin/env node

// Interactive script to set up test credentials for Harness upload functional test

import { readFileSync, writeFileSync, existsSync } from 'fs';
import { createInterface } from 'readline';

const rl = createInterface({
    input: process.stdin,
    output: process.stdout
});

function question(prompt) {
    return new Promise((resolve) => {
        rl.question(prompt, resolve);
    });
}

async function setupCredentials() {
    console.log('🔧 Harness Upload Test Credentials Setup');
    console.log('='.repeat(50));
    console.log('');
    console.log('This script will help you set up credentials for the Harness upload functional test.');
    console.log('');
    
    // Check if credentials file already exists
    const credentialsPath = 'config/test-credentials.js';
    if (existsSync(credentialsPath)) {
        console.log('⚠️  Credentials file already exists at config/test-credentials.js');
        const overwrite = await question('Do you want to overwrite it? (y/N): ');
        if (overwrite.toLowerCase() !== 'y' && overwrite.toLowerCase() !== 'yes') {
            console.log('✅ Keeping existing credentials file.');
            rl.close();
            return;
        }
    }
    
    console.log('');
    console.log('📋 Please provide your Harness credentials:');
    console.log('');
    
    // Get Account ID
    console.log('1️⃣  Account ID:');
    console.log('   • Found in your Harness URL (e.g., https://app.harness.io/ng/account/YOUR_ACCOUNT_ID)');
    console.log('   • Or in Account Settings > Overview');
    const accountId = await question('   Enter your Harness Account ID: ');
    
    if (!accountId || accountId.trim() === '') {
        console.log('❌ Account ID is required. Exiting.');
        rl.close();
        return;
    }
    
    console.log('');
    
    // Get API Key
    console.log('2️⃣  API Key:');
    console.log('   • Generate in Harness: Account Settings > Access Management > API Keys');
    console.log('   • Required permissions: ccm:costCategory:create, ccm:costCategory:edit');
    console.log('   • Make sure it has Cost Management permissions');
    const apiKey = await question('   Enter your Harness API Key: ');
    
    if (!apiKey || apiKey.trim() === '') {
        console.log('❌ API Key is required. Exiting.');
        rl.close();
        return;
    }
    
    console.log('');
    
    // Create credentials file content
    const credentialsContent = `// Harness test credentials
// Generated by setup-test-credentials.js on ${new Date().toISOString()}
// DO NOT COMMIT THIS FILE TO VERSION CONTROL

export const TEST_CREDENTIALS = {
    // Your Harness Account ID
    accountId: '${accountId.trim()}',
    
    // Your Harness API Key (with cost management permissions)
    apiKey: '${apiKey.trim()}'
};

// This file is used by tests/harness-upload-functional.test.js
// Make sure this file is in your .gitignore to keep credentials secure
`;
    
    // Write credentials file
    try {
        writeFileSync(credentialsPath, credentialsContent);
        console.log('✅ Credentials saved to config/test-credentials.js');
    } catch (error) {
        console.log(`❌ Failed to save credentials: ${error.message}`);
        rl.close();
        return;
    }
    
    console.log('');
    console.log('🔒 Security Note:');
    console.log('   • The credentials file has been created');
    console.log('   • Make sure config/test-credentials.js is in your .gitignore');
    console.log('   • Never commit credentials to version control');
    
    console.log('');
    console.log('🧪 Next Steps:');
    console.log('   1. Run the functional test:');
    console.log('      npm test tests/harness-upload-functional.test.js');
    console.log('');
    console.log('   2. Or run with verbose output:');
    console.log('      npm test tests/harness-upload-functional.test.js -- --reporter=verbose');
    
    console.log('');
    console.log('🎯 The test will:');
    console.log('   • Upload all 3 cost categories from CBP1.json');
    console.log('   • Replace account IDs with your credentials');
    console.log('   • Verify the upload was successful');
    console.log('   • Check that categories exist in your Harness account');
    
    rl.close();
}

// Check if config directory exists
if (!existsSync('config')) {
    console.log('📁 Creating config directory...');
    try {
        const { mkdirSync } = await import('fs');
        mkdirSync('config');
    } catch (error) {
        console.log(`❌ Failed to create config directory: ${error.message}`);
        process.exit(1);
    }
}

setupCredentials().catch(error => {
    console.error('❌ Setup failed:', error.message);
    process.exit(1);
});
